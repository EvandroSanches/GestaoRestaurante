unit u_cidade_CadPadrao;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, u_cadastro_padrao, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.StdCtrls, Vcl.Grids, Vcl.DBGrids, Vcl.ExtCtrls, Vcl.Mask, Vcl.DBCtrls;

type
  TF_cidade_CadPadrao = class(Tf_CadPadrao)
    q_dadoscod_cidade: TFDAutoIncField;
    q_dadosnome: TStringField;
    q_dadosuf: TStringField;
    q_dadoscep_padrao: TStringField;
    Label3: TLabel;
    DBEdit2: TDBEdit;
    Label4: TLabel;
    DBEdit3: TDBEdit;
    Label5: TLabel;
    DBEdit4: TDBEdit;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
  public
    { Public declarations }

  protected

           procedure controle_visual; override;
           function validar : boolean; override;
           function pode_excluir : String; override;
  end;

var
  F_cidade_CadPadrao: TF_cidade_CadPadrao;

implementation

{$R *.dfm}

uses u_dm;



procedure TF_cidade_CadPadrao.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  inherited;

  F_cidade_CadPadrao := nil;
end;

procedure TF_cidade_CadPadrao.controle_visual;
begin
  inherited;
  DBEdit2.Enabled := b_gravar.Enabled;
  DBEdit3.Enabled := b_gravar.Enabled;
  DBEdit4.Enabled := b_gravar.Enabled;
end;


function TF_cidade_CadPadrao.validar : boolean;
begin
  if trim(DBEdit2.Text) = '' then
  begin
    ShowMessage('O campo Cidade deve ser preenchido !');
    result := false;
    exit;
  end;

  if trim(DBEdit3.Text) = '' then
  begin
    ShowMessage('O campo Unidade Federal deve ser preenchido !');
    result := false;
    exit;
  end;

  if trim(DBEdit4.Text) = '' then
  begin
    ShowMessage('O campo CEP deve ser preenchido !');
    result := false;
    exit;
  end;
  result := true;

end;

function TF_cidade_CadPadrao.pode_excluir;
begin
  dm.q_geral.SQL.Clear;
  dm.q_geral.SQL.Add('select count(*) as total '+'');
  dm.q_geral.SQL.Add(' from clientes as C, fornecedores as F '+'');
  dm.q_geral.SQL.Add(' where C.cod_cidade = '+QuotedStr(q_dados.FieldByName('cod_cidade').AsString) +'');
  dm.Q_Geral.SQL.Add(' or F.cod_cidade = '+QuotedStr(q_dados.FieldByName('cod_cidade').AsString) +'');
  dm.q_geral.Open;
  if dm.q_geral.FieldByName('total').AsInteger > 0 then
  begin
     result := 'Não foi possivel excluir essa cidade pois possui relacionados !';
     exit;
  end;
  result := '';

end;

end.
